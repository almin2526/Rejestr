@model RejestrSzkolen.ViewModels.IndexVM
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}

<h2>Uczestnicy zajęć</h2>

<p>
    @Html.ActionLink("Dodaj", "Create", null, new { @class = "btn btn-default" })
</p>

<div class="form-inline">
    @using (Html.BeginForm("Index", "Students", FormMethod.Get))
    {
        @Html.TextBox("SearchString",Model.CurrentFilter, new { @class = "form-control", @placeholder = "Szukaj..." })
        <input type="submit" value="Szukaj" class="btn btn-default" />
    }
</div>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Nazwisko", "Index", new { sortOrder = Model.NameSortParm, currentFilter = Model.CurrentFilter })
        </th>
        <th>
            Imię
        </th>
        <th>
            @Html.ActionLink("Data rejestracji", "Index", new { sortOrder = Model.DateSortParm, currentFilter = Model.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.Lista)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nazwisko)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Imie)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DataRejestracji)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.ActionLink("Edycja", "Edit", new { id = item.ID }, new { @class = "btn btn-default" })
                @Html.ActionLink("Zapisy", "Details", new { id = item.ID },new { @class="btn btn-info" }) 
                @Html.ActionLink("Usuń", "Delete", new { id = item.ID }, new { @class = "btn btn-danger" })
            </td>
        </tr>
    }

</table>
<br />
Strona @(Model.Lista.PageCount < Model.Lista.PageNumber ? 0 : Model.Lista.PageNumber) z
@Model.Lista.PageCount

@Html.PagedListPager(Model.Lista, page => Url.Action("Index",
    new
    {
        page,
        sortOrder = Model.CurrentSort,
        currentFilter =Model.CurrentFilter
    }))
 
